# These entries are shared between all the Immich components

immich:
  persistence:
    library:
      existingClaim: "immich-library"

env:
  REDIS_HOSTNAME: '{{ printf "%s-redis-master" .Release.Name }}'
  DB_HOSTNAME: "{{ .Release.Name }}-postgresql"
  DB_USERNAME: "{{ .Values.postgresql.global.postgresql.auth.username }}"
  DB_DATABASE_NAME: "{{ .Values.postgresql.global.postgresql.auth.database }}"
  # -- You should provide your own secret outside of this helm-chart and use `postgresql.global.postgresql.auth.existingSecret` to provide credentials to the postgresql instance
  DB_PASSWORD: "{{ .Values.postgresql.global.postgresql.auth.password }}"
  TYPESENSE_API_KEY: "{{ .Values.typesense.env.TYPESENSE_API_KEY }}"
  IMMICH_WEB_URL: '{{ printf "http://%s-web:3000" .Release.Name }}'
  IMMICH_SERVER_URL: '{{ printf "http://%s-server:3001" .Release.Name }}'
  IMMICH_MACHINE_LEARNING_URL: '{{ printf "http://%s-machine-learning:3001" .Release.Name }}'

image:
  tag: v1.52.1

# Dependencies

postgresql:
  enabled: false
  global:
    postgresql:
      auth:
        username: immich
        database: immich
        password: immich

redis:
  enabled: false
  architecture: standalone
  auth:
    enabled: false

typesense:
  enabled: false
  env:
    TYPESENSE_DATA_DIR: /tsdata
    TYPESENSE_API_KEY: typesense
  persistence:
    tsdata:
      enabled: false
      accessMode: ReadWriteOnce
      size: 1Gi
      # storageClass: storage-class
  image:
    repository: docker.io/typesense/typesense
    tag: 0.24.0
    pullPolicy: IfNotPresent

# Immich components

server:
  enabled: true
  env:
    NODE_ENV: "production"
  image:
    repository: ghcr.io/immich-app/immich-server
    pullPolicy: IfNotPresent

microservices:
  enabled: true
  env:
    NODE_ENV: "production"
    REVERSE_GEOCODING_DUMP_DIRECTORY: /geodata-cache
  persistence:
    geodata-cache:
      enabled: false
      type: pvc
      size: 1Gi
      accessMode: ReadWriteOnce
      # storageClass: your-class
  image:
    repository: ghcr.io/immich-app/immich-server
    pullPolicy: IfNotPresent

machine-learning:
  enabled: true
  image:
    repository: ghcr.io/immich-app/immich-machine-learning
    pullPolicy: IfNotPresent
  env:
    TRANSFORMERS_CACHE: /cache
  persistence:
    cache:
      enabled: false
      type: pvc
      size: 10Gi
      accessMode: ReadWriteOnce
      # storageClass: your-class

web:
  enabled: true
  image:
    repository: ghcr.io/immich-app/immich-web
    pullPolicy: IfNotPresent
  env:
    NODE_ENV: "production"

proxy:
  enabled: true
  image:
    repository: ghcr.io/immich-app/immich-proxy
    pullPolicy: IfNotPresent

  ingress:
    main:
      enabled: false
      hosts:
        - host: immich.local
          paths:
            - path: "/"
      tls: []
